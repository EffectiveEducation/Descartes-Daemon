#Generated by Kickstart Configurator
#platform=x86

#System language
lang en_US
#Language modules to install
langsupport ru_UA es_MX --default=en_US
#System keyboard
keyboard us
#System mouse
mouse
#System timezone
timezone America/Los_Angeles
#Root password
rootpw --disabled
#Initial user
user dummy --fullname "Dummy Account" --iscrypted --password $1$PhGr1JT6$V2qyBpenDSVlhreBxk4Z.0
#Reboot after installation
reboot
#Use text mode install
text
#Install OS instead of upgrade
install
#Use CDROM installation media
cdrom
#System bootloader configuration
bootloader --location=mbr 
#Clear the Master Boot Record
zerombr yes
#Partition clearing information
clearpart --all --initlabel 
#System authorization infomation
auth  --useshadow  --enablemd5 
#Network information
network --bootproto=dhcp --device=eth0
#Firewall configuration
firewall --disabled 
#X Window System configuration information
xconfig --depth=16 --resolution=800x600 --defaultdesktop=GNOME --startxonboot



# ----------------------------------------------------------------------
# Script to run towards the beginning of the installation
# Note: d-i does some basic hardware detection, etc before running this
# ----------------------------------------------------------------------
%pre

# Changes to Virtual Terminal 6 so that output will display properly and can be interactive
# From http://hintshop.ludvig.co.nz/show/interactive-pre-post-install-scripts-redhat-kickstart/
exec < /dev/tty6 > /dev/tty6 2> /dev/tty6
chvt 6

# Copy Binaries into Appropriate Locations to Have a More Robust 
cp --recursive /cdrom/pool/binary-i386/* /

# Make a RamDisk to store Environmental Variables, so they can be used later in the %post script
mkfs -q /dev/ram1 8192
mkdir -p /variables
mount /dev/ram1 /variables

# Get variables that will be used later in the %post script

# Get vubadmin Password
# stty and clear apparently don't work when this script runs, and there are problems adding the user at the post section 
# so this will need to be revisited
# stty -echo
echo 'VubuntuBox Admin (vubadmin) Password'
echo '===================================='
echo
read -p "Enter the Password for the vubadmin user: " VubAdminPasswd
echo $VubAdminPasswd > /variables/VubAdminPasswd
echo
# stty echo
# clear

# Get Guest OS Hostname, which will also be used as part of the Host OS Hostname
echo
echo 'Guest OS Hostname'
echo '================='
echo 'This will also be used in the Host OS hostname, where it will have the same name,'
echo 'with "-vub" added as a suffix'
echo
read -p "Enter the main Guest OS Hostname: " GuestOSHostname
echo $GuestOSHostname > /variables/GuestOSHostname
echo


# Get URL to be used to download Virtual Image file at the end of the installation
echo 'Virtual Machine OVA URL'
echo '======================='
echo
echo 'VubuntuBox will download a virtual image after installing itself.'
echo 'It can use http, https, ftp, or smb (windows file sharing)'
echo 'It will use either wget or smbget.  Read their documentation for more info.'
echo
read -p "Enter the full URL of the Virtual Image: " VirtualImageURL
echo $VirtualImageURL > /variables/VirtualImageURL
echo

# Confirms that the user knows that the disk is going to get wiped with this installation
echo 'WARNING!!! WARNING!!! WARNING!!!'
echo 'WARNING! THE EXISTING DATA IN THIS HARDDISK WILL BE OVERWRITTEN!'
echo 'ALL EXISTING DATA WILL BE LOST'
echo
read -p "Are you sure you want to continue? ? (y/n) " -n 1 REPLY
echo
if [[ "$REPLY" != "y" ]]; then
    shutdown      
fi
echo
read -p "Let me ask you again, Are you sure you want to continue? (y/n) " -n 1 REPLY
echo
if [[ "$REPLY" != "y" ]]; then
    shutdown      
fi

# Start an interactive shell for debugging purposes
/bin/ash

# Change back to Virtual Terminal 1 where the Install has been running
# From http://hintshop.ludvig.co.nz/show/interactive-pre-post-install-scripts-redhat-kickstart/
chvt 1
exec < /dev/tty1 > /dev/tty1 2> /dev/tty1

# Unmount RamDisk, but still leaving it in memory
umount /variables

# Automatically erases part of existing operating system, so that it avoids the confirmation dialogue about the drive being mounted
# See https://bugs.launchpad.net/ubuntu/+source/debian-installer/+bug/1370315
dd if=/dev/zero of=/dev/sda bs=1M count=10

%end



# ---------------------------------------------------
# Script to run towards the end of the installation.
# Note: This does not run at the very end, as the
#       d-i still runs add users, etc, after this
# ---------------------------------------------------
%post

# Changes to Virtual Terminal 6 so that output will display properly and can be interactive
# From http://hintshop.ludvig.co.nz/show/interactive-pre-post-install-scripts-redhat-kickstart/
exec < /dev/tty6 > /dev/tty6 2> /dev/tty6
chvt 6

# Remount the RamDisk to get Variables
mkdir -p /variables
mount /dev/ram1 /variables

# Import Variables
export GuestOSHostname=`cat /variables/GuestOSHostname`
export VirtualImageURL=`cat /variables/VirtualImageURL`
export VubAdminPasswd=`cat /variables/VubAdminPasswd`

# Add Users
# Adds vubdmin User
adduser --disabled-password --gecos "VirtualBox Admin" vubadmin
echo "vubadmin:$VubAdminPasswd" | chpasswd

# Adds the GuestOS User
adduser --disabled-password --gecos "Guest OS 1" guestos0001
passwd guestos0001 -d

# Start an interactive shell for debugging purposes
echo $VirtualImageURL
/bin/bash

# Install VirtualBox from its Repository
echo 'deb http://download.virtualbox.org/virtualbox/debian trusty contrib' >> /etc/apt/sources.list
wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | apt-key add -
apt-get update
apt-get install virtualbox-4.3 -y

# Fixes Kernel driver not installed problem
# From http://www.binarytides.com/fix-vbox-kernel-driver-error/
apt-get install build-essential module-assistant -y
m-a prepare
/etc/init.d/vboxdrv setup


# Download Virtual Image from $VirtualImageURL
# Currently this is a "quick and dirty" method, of just running both smbget and wget, knowing one or the other will fail.  
# An "if" statement with some parsing of $VirtualImageURL should be added to have cleaner code
cd /usr/share/virtualbox
smbget $VirtualImageURL
wget $VirtualImageURL

# Start an interactive shell for debugging purposes
echo $VirtualImageURL
/bin/bash


# Change back to Virtual Terminal 1 where the Install has been running
# From http://hintshop.ludvig.co.nz/show/interactive-pre-post-install-scripts-redhat-kickstart/
chvt 1
exec < /dev/tty1 > /dev/tty1 2> /dev/tty1

%end
